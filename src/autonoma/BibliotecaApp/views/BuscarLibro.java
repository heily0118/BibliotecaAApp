/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package autonoma.BibliotecaApp.views;

import autonoma.BibliotecaApp.models.Biblioteca;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import autonoma.BibliotecaApp.models.Libro;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.ArrayList;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import autonoma.BibliotecaApp.models.Autor;
import java.awt.Dimension;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JDialog;
import javax.swing.JLabel;
/**
 *
 * @author Heily Yohana Rios Ayala<heilyy.riosa@autonoma.edu.co>
 * * 
 * @version 1.0.0
 * 
 * @since 20250312
 */
 
public class BuscarLibro extends javax.swing.JDialog {
     private Biblioteca biblioteca;

    /**
     * Creates new form BuscarLibro
     */
    public BuscarLibro(java.awt.Frame parent, boolean modal,Biblioteca biblioteca) {
        super(parent, modal);
        initComponents();
        setSize(700, 550);
        setResizable(false);
        this.setLocationRelativeTo(null);
       
        
        this.biblioteca = biblioteca;
         
        try{ 
        this.setIconImage(new ImageIcon(getClass().getResource("/autonoma/BibliotecaApp/images/Biblioteca.png")).getImage());
        }catch(NullPointerException e){
             System.out.println("Imagen no encontrada");
            
        }
         LisLibros.setSelectionBackground(new Color(173, 216, 230)); 
         LisLibros.setSelectionForeground(Color.WHITE);

       
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cerrar = new javax.swing.JToggleButton();
        libroBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JPanel();
        buscar = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        LisLibros = new javax.swing.JTable();
        btnAtras = new javax.swing.JToggleButton();
        detalles = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(650, 500));

        jPanel1.setBackground(new java.awt.Color(204, 0, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 51), 2));

        cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autonoma/BibliotecaApp/images/cerrar.png"))); // NOI18N
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });

        libroBuscar.setForeground(new java.awt.Color(204, 204, 204));
        libroBuscar.setText("Ingresa el ID del libro a buscar");
        libroBuscar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        libroBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                libroBuscarMouseClicked(evt);
            }
        });
        libroBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libroBuscarActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(204, 0, 51));
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });

        buscar.setBackground(new java.awt.Color(255, 255, 255));
        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autonoma/BibliotecaApp/images/buscar.png"))); // NOI18N

        javax.swing.GroupLayout btnBuscarLayout = new javax.swing.GroupLayout(btnBuscar);
        btnBuscar.setLayout(btnBuscarLayout);
        btnBuscarLayout.setHorizontalGroup(
            btnBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnBuscarLayout.createSequentialGroup()
                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );
        btnBuscarLayout.setVerticalGroup(
            btnBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(libroBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(libroBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(28, 28, 28)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 51), 2));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(null);

        LisLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "ID", "Autor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        LisLibros.setSelectionBackground(new java.awt.Color(255, 255, 255));
        LisLibros.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(LisLibros);
        if (LisLibros.getColumnModel().getColumnCount() > 0) {
            LisLibros.getColumnModel().getColumn(0).setResizable(false);
            LisLibros.getColumnModel().getColumn(1).setResizable(false);
            LisLibros.getColumnModel().getColumn(2).setResizable(false);
        }

        jScrollPane1.setViewportView(jScrollPane2);

        btnAtras.setBackground(new java.awt.Color(204, 51, 0));
        btnAtras.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnAtras.setForeground(new java.awt.Color(255, 255, 255));
        btnAtras.setText("Atras");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        detalles.setBackground(new java.awt.Color(102, 153, 255));
        detalles.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        detalles.setForeground(new java.awt.Color(255, 255, 255));
        detalles.setText("Detalles autor");
        detalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(detalles)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(detalles)))
                .addGap(187, 187, 187)
                .addComponent(btnAtras)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
     System.exit(0);
    }//GEN-LAST:event_cerrarActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
    DefaultTableModel modelo = (DefaultTableModel) LisLibros.getModel();
    modelo.setRowCount(0);
    String textoId = libroBuscar.getText().trim();
    if (textoId.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingresa un ID válido.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    try {
        long id = Long.parseLong(textoId);
        Libro libro = biblioteca.obtenerLibroPorId(id);
        if (libro == null) {
            JOptionPane.showMessageDialog(this, "El libro con ID " + textoId + " No se encunetra en nuentra biblioteca.", "Error", JOptionPane.ERROR_MESSAGE);
            libroBuscar.setText(""); 
            return;
        }
        modelo.addRow(new Object[]{ libro.getTitulo(), libro.getId(), libro.getAutor().getNombre() });
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "El ID debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
    }



    }//GEN-LAST:event_btnBuscarMouseClicked

    private void libroBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libroBuscarActionPerformed
        

    }//GEN-LAST:event_libroBuscarActionPerformed

    private void libroBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libroBuscarMouseClicked
        if (libroBuscar.getText().equals("Ingresa el ID del libro a buscar")) {
        libroBuscar.setText("");
        libroBuscar.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_libroBuscarMouseClicked

    private void detallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesActionPerformed
    int filaSeleccionada = LisLibros.getSelectedRow();
    
    
    if (filaSeleccionada == -1) {
       
        JOptionPane.showMessageDialog(
            this,
            "Debe seleccionar un libro primero",
            "Error",
            JOptionPane.WARNING_MESSAGE
        );
        return; 
    }
    
   
    try {
        long idLibro = (long) LisLibros.getValueAt(filaSeleccionada, 1); 
        Autor autorSeleccionado = biblioteca.obtenerAutorPorIdLibro(idLibro); 
        Libro libroSeleccionado = biblioteca.obtenerLibroPorId(idLibro);
        
        JDialog ventanaDetalles = new JDialog(this, "Detalles del Autor", true);
        
        
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20)); 
        
        JLabel lblNombre = new JLabel("Nombre: " + autorSeleccionado.getNombre());
        JLabel lblCorreo = new JLabel("Correo: " + autorSeleccionado.getCorreoElectronico());
        JLabel lblProfesion = new JLabel("Profesión: " + autorSeleccionado.getProfesion());
        JLabel lblDocumento = new JLabel("Documento identidad: " + autorSeleccionado.getDocumentoIdentidad());
        JLabel lblEditorial = new JLabel("Editorial: " + autorSeleccionado.getEditorial());
        
        Font labelFont = new Font("Arial", Font.PLAIN, 14);
        lblNombre.setFont(labelFont);
        lblCorreo.setFont(labelFont);
        lblProfesion.setFont(labelFont);
        lblDocumento.setFont(labelFont);
        lblEditorial.setFont(labelFont);
        
       
        panel.add(lblNombre);
        panel.add(Box.createRigidArea(new Dimension(0, 15)));
        panel.add(lblCorreo);
        panel.add(Box.createRigidArea(new Dimension(0, 15)));
        panel.add(lblProfesion);
        panel.add(Box.createRigidArea(new Dimension(0, 15)));
        panel.add(lblDocumento);
        panel.add(Box.createRigidArea(new Dimension(0, 15)));
        panel.add(lblEditorial);
        
       
        ventanaDetalles.add(panel);
        
        ventanaDetalles.setSize(700, 550);
        ventanaDetalles.setLocationRelativeTo(this);
        ventanaDetalles.setVisible(true);
    } catch (Exception e) {
        
        JOptionPane.showMessageDialog(
            this,
            "Error al obtener los detalles: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE
        );
        
    }



    }//GEN-LAST:event_detallesActionPerformed
    private void mouseEntered(JPanel panel){
        panel.setBackground(new Color(200,255,255));
        
    }
    private void mouseExited(JPanel panel){
        panel.setBackground(new Color(255,255,255));
    }
    
    
    private void actualizarTabla(ArrayList<Libro> libros) {
     DefaultTableModel modelo = (DefaultTableModel) LisLibros.getModel();
    modelo.setRowCount(0);
    for (Libro libro : libros) {
        modelo.addRow(new Object[]{libro.getTitulo(), libro.getId(), libro.getAutor().getNombre()});
    
 

    }
}
     private long obtenerIdDesdeInput(String input) {
    if (input == null || input.trim().isEmpty()) {
        System.out.println("Error: El ID ingresado es nulo o vacío.");
        return -1; 
    }
    
    try {
        return Long.parseLong(input);
    } catch (NumberFormatException e) {
        System.out.println("Error: El ID ingresado no es un número válido.");
        return -1; 
    }
}
    private String obtenerTituloDesdeInput() {
    return JOptionPane.showInputDialog("Ingrese el nuevo título:");
}
 private String obtenerNombreAutorDesdeInput() {
    return JOptionPane.showInputDialog("Ingrese el nuevo nombre del autor:");
}

private String obtenerEditorialAutorDesdeInput() {
    return JOptionPane.showInputDialog("Ingrese la nueva editorial del autor:");
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable LisLibros;
    private javax.swing.JToggleButton btnAtras;
    private javax.swing.JPanel btnBuscar;
    private javax.swing.JLabel buscar;
    private javax.swing.JToggleButton cerrar;
    private javax.swing.JToggleButton detalles;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField libroBuscar;
    // End of variables declaration//GEN-END:variables
}
